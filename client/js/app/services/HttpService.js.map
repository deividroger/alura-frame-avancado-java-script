{"version":3,"sources":["../../app-es6/services/HttpService.js"],"names":["HttpService","url","fetch","then","_handleErrors","res","json","dado","headers","method","body","JSON","stringify","ok","Error","statusText"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;mCAAaA,W;;;;;;;wCACLC,G,EAAK;AAAA;;AACL,+BAAOC,MAAMD,GAAN,EACFE,IADE,CACG;AAAA,mCAAO,MAAKC,aAAL,CAAmBC,GAAnB,CAAP;AAAA,yBADH,EAEFF,IAFE,CAEG;AAAA,mCAAOE,IAAIC,IAAJ,EAAP;AAAA,yBAFH,CAAP;AAGH;;;yCAEIL,G,EAAKM,I,EAAM;AAAA;;AAEZ,+BAAOL,MAAMD,GAAN,EACH;AACIO,qCAAS;AACL,gDAAgB;AADX,6BADb;AAIIC,oCAAQ,MAJZ;AAKIC,kCAAMC,KAAKC,SAAL,CAAeL,IAAf;;AALV,yBADG,EAQAJ,IARA,CAQK;AAAA,mCAAO,OAAKC,aAAL,CAAmBC,GAAnB,CAAP;AAAA,yBARL,CAAP;AASH;;;kDAEaA,G,EAAK;;AAEf,4BAAI,CAACA,IAAIQ,EAAT,EAAa,MAAMC,MAAMT,IAAIU,UAAV,CAAN;AACb,+BAAOV,GAAP;AACH","file":"HttpService.js","sourcesContent":["export class HttpService {\n    get(url) {\n        return fetch(url)\n            .then(res => this._handleErrors(res))\n            .then(res => res.json());\n    }\n\n    post(url, dado) {\n\n        return fetch(url,\n            {\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                method: 'post',\n                body: JSON.stringify(dado)\n\n            }).then(res => this._handleErrors(res));\n    }\n\n    _handleErrors(res) {\n\n        if (!res.ok) throw Error(res.statusText);\n        return res;\n    }\n}"]}