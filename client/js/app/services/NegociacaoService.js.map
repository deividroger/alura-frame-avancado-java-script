{"version":3,"sources":["../../app-es6/services/NegociacaoService.js"],"names":["HttpService","ConnectionFactoryService","NegociacaoDao","Negociacao","NegociacaoService","_http","Promise","all","obterNegociacoesDaSemana","obterNegociacoesDaSemanaAnterior","obterNegociacoesDaSemanaRetrasada","then","negociacoes","periodos","reduce","dados","periodo","concat","catch","Error","erro","resolve","reject","get","map","Date","objeto","data","quantidade","valor","console","log","negociacao","getConnection","connection","dao","adiciona","listaTodos","apagaTodos","listaAtual","obterNegociacoes","filter","some","isEquals","negociacaoExistente"],"mappings":";;;;;;;;;;;;;;;AAASA,uB,gBAAAA,W;;AACAC,oC,6BAAAA,wB;;AACAC,yB,qBAAAA,a;;AACDC,sB,qBAAAA,U;;;;;;;;;;;;;;;;;;;;;yCACKC,iB;AAET,6CAAc;AAAA;;AACV,yBAAKC,KAAL,GAAa,IAAIL,WAAJ,EAAb;AACH;;;;uDAEkB;;AAEf,+BAAOM,QAAQC,GAAR,CAAY,CACf,KAAKC,wBAAL,EADe,EAEf,KAAKC,gCAAL,EAFe,EAGf,KAAKC,iCAAL,EAHe,CAAZ,EAIJC,IAJI,CAIC,oBAAY;;AAEhB,gCAAIC,cAAcC,SACbC,MADa,CACN,UAACC,KAAD,EAAQC,OAAR;AAAA,uCAAoBD,MAAME,MAAN,CAAaD,OAAb,CAApB;AAAA,6BADM,EACqC,EADrC,CAAlB;;AAGA,mCAAOJ,WAAP;AAEH,yBAXM,EAWJM,KAXI,CAWE,gBAAQ;AACb,kCAAM,IAAIC,KAAJ,CAAUC,IAAV,CAAN;AACH,yBAbM,CAAP;AAeH;;;+DAE0B;AAAA;;AAEvB,+BAAO,IAAId,OAAJ,CAAY,UAACe,OAAD,EAAUC,MAAV,EAAqB;;AAEpC,kCAAKjB,KAAL,CACKkB,GADL,CACS,oBADT,EAEKZ,IAFL,CAEU,uBAAe;AACjBU,wCAAQT,YAAYY,GAAZ,CAAgB;AAAA,2CAAU,IAAIrB,UAAJ,CAAe,IAAIsB,IAAJ,CAASC,OAAOC,IAAhB,CAAf,EAAsCD,OAAOE,UAA7C,EAAyDF,OAAOG,KAAhE,CAAV;AAAA,iCAAhB,CAAR;AACH,6BAJL,EAIOX,KAJP,CAIa,gBAAQ;AACbY,wCAAQC,GAAR,CAAYX,IAAZ;AACAE,uCAAO,iDAAP;AACH,6BAPL;AAQH,yBAVM,CAAP;AAWH;;;uEAEkC;AAAA;;AAE/B,+BAAO,IAAIhB,OAAJ,CAAY,UAACe,OAAD,EAAUC,MAAV,EAAqB;;AAEpC,mCAAKjB,KAAL,CACKkB,GADL,CACS,sBADT,EAEKZ,IAFL,CAEU,uBAAe;AACjBU,wCAAQT,YAAYY,GAAZ,CAAgB;AAAA,2CAAU,IAAIrB,UAAJ,CAAe,IAAIsB,IAAJ,CAASC,OAAOC,IAAhB,CAAf,EAAsCD,OAAOE,UAA7C,EAAyDF,OAAOG,KAAhE,CAAV;AAAA,iCAAhB,CAAR;AACH,6BAJL,EAIOX,KAJP,CAIa,gBAAQ;AACbY,wCAAQC,GAAR,CAAYX,IAAZ;AACAE,uCAAO,0DAAP;AACH,6BAPL;AAQH,yBAVM,CAAP;AAWH;;;wEAEmC;AAAA;;AAEhC,+BAAO,IAAIhB,OAAJ,CAAY,UAACe,OAAD,EAAUC,MAAV,EAAqB;;AAEpC,mCAAKjB,KAAL,CACKkB,GADL,CACS,uBADT,EAEKZ,IAFL,CAEU,uBAAe;AACjBU,wCAAQT,YAAYY,GAAZ,CAAgB;AAAA,2CAAU,IAAIrB,UAAJ,CAAe,IAAIsB,IAAJ,CAASC,OAAOC,IAAhB,CAAf,EAAsCD,OAAOE,UAA7C,EAAyDF,OAAOG,KAAhE,CAAV;AAAA,iCAAhB,CAAR;AACH,6BAJL,EAIOX,KAJP,CAIa,gBAAQ;AACbY,wCAAQC,GAAR,CAAYX,IAAZ;AACAE,uCAAO,2DAAP;AACH,6BAPL;AAQH,yBAVM,CAAP;AAWH;;;6CAEQU,U,EAAY;;AAEjB,+BAAO/B,yBACFgC,aADE,GAEFtB,IAFE,CAEG;AAAA,mCACF,IAAIT,aAAJ,CAAkBgC,UAAlB,CADE;AAAA,yBAFH,EAIFvB,IAJE,CAIG;AAAA,mCAAOwB,IAAIC,QAAJ,CAAaJ,UAAb,CAAP;AAAA,yBAJH,EAKFrB,IALE,CAKG;AAAA,mCAAM,mCAAN;AAAA,yBALH,EAMFO,KANE,CAMI,gBAAQ;AACXY,oCAAQC,GAAR,CAAYX,IAAZ;AACA,kCAAM,IAAID,KAAJ,CAAU,yCAAV,CAAN;AACH,yBATE,CAAP;AAUH;;;4CAEO;AACJ,+BAAOlB,yBACFgC,aADE,GAEFtB,IAFE,CAEG;AAAA,mCAAc,IAAIT,aAAJ,CAAkBgC,UAAlB,CAAd;AAAA,yBAFH,EAGFvB,IAHE,CAGG;AAAA,mCAAOwB,IAAIE,UAAJ,EAAP;AAAA,yBAHH,EAIFnB,KAJE,CAII,gBAAQ;AACXY,oCAAQC,GAAR,CAAYX,IAAZ;AACA,kCAAM,IAAID,KAAJ,CAAU,uCAAV,CAAN;AACH,yBAPE,CAAP;AAQH;;;4CAEO;;AAEJ,+BAAOlB,yBACFgC,aADE,GAEFtB,IAFE,CAEG;AAAA,mCAAc,IAAIT,aAAJ,CAAkBgC,UAAlB,CAAd;AAAA,yBAFH,EAGFvB,IAHE,CAGG;AAAA,mCAAOwB,IAAIG,UAAJ,EAAP;AAAA,yBAHH,EAIF3B,IAJE,CAIG;AAAA,mCAAM,kCAAN;AAAA,yBAJH,EAMFO,KANE,CAMI,gBAAQ;AACXY,oCAAQC,GAAR,CAAYX,IAAZ;AACA,kCAAM,IAAID,KAAJ,CAAU,wCAAV,CAAN;AAEH,yBAVE,CAAP;AAWH;;;4CAEOoB,U,EAAY;;AAEhB,+BAAO,KAAKC,gBAAL,GACF7B,IADE,CACG;AAAA,mCAAeC,YAAY6B,MAAZ,CAAmB;AAAA,uCACpC,CAACF,WACIG,IADJ,CACS;AAAA,2CAAuBV,WAAWW,QAAX,CAAoBC,mBAApB,CAAvB;AAAA,iCADT,CADmC;AAAA,6BAAnB,CAAf;AAAA,yBADH,EAIA1B,KAJA,CAIM,gBAAQ;AACbY,oCAAQC,GAAR,CAAYX,IAAZ;AACA,kCAAM,IAAID,KAAJ,CAAU,qCAAV,CAAN;AACH,yBAPE,CAAP;AASH","file":"NegociacaoService.js","sourcesContent":["import { HttpService } from './HttpService'\nimport { ConnectionFactoryService } from './ConnectionFactoryService'\nimport { NegociacaoDao } from '../dao/NegociacaoDao'\nimport {Negociacao} from '../models/Negociacao'\nexport class NegociacaoService {\n\n    constructor() {\n        this._http = new HttpService();\n    }\n\n    obterNegociacoes() {\n\n        return Promise.all([\n            this.obterNegociacoesDaSemana(),\n            this.obterNegociacoesDaSemanaAnterior(),\n            this.obterNegociacoesDaSemanaRetrasada()\n        ]).then(periodos => {\n\n            let negociacoes = periodos\n                .reduce((dados, periodo) => dados.concat(periodo), []);\n\n            return negociacoes;\n\n        }).catch(erro => {\n            throw new Error(erro);\n        });\n\n    }\n\n    obterNegociacoesDaSemana() {\n\n        return new Promise((resolve, reject) => {\n\n            this._http\n                .get('negociacoes/semana')\n                .then(negociacoes => {\n                    resolve(negociacoes.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor)));\n                }).catch(erro => {\n                    console.log(erro);\n                    reject('Não foi possível obter as negociações da semana');\n                });\n        });\n    }\n\n    obterNegociacoesDaSemanaAnterior() {\n\n        return new Promise((resolve, reject) => {\n\n            this._http\n                .get('negociacoes/anterior')\n                .then(negociacoes => {\n                    resolve(negociacoes.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor)));\n                }).catch(erro => {\n                    console.log(erro);\n                    reject('Não foi possível obter as negociações da semana anterior');\n                });\n        });\n    }\n\n    obterNegociacoesDaSemanaRetrasada() {\n\n        return new Promise((resolve, reject) => {\n\n            this._http\n                .get('negociacoes/retrasada')\n                .then(negociacoes => {\n                    resolve(negociacoes.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor)));\n                }).catch(erro => {\n                    console.log(erro);\n                    reject('Não foi possível obter as negociações da semana retrasada');\n                });\n        });\n    }\n\n    cadastra(negociacao) {\n\n        return ConnectionFactoryService\n            .getConnection()\n            .then(connection =>\n                new NegociacaoDao(connection))\n            .then(dao => dao.adiciona(negociacao))\n            .then(() => 'Negociação adicionada com sucesso')\n            .catch(erro => {\n                console.log(erro);\n                throw new Error('Não foi possível adicionar a negociação')\n            });\n    }\n\n    lista() {\n        return ConnectionFactoryService\n            .getConnection()\n            .then(connection => new NegociacaoDao(connection))\n            .then(dao => dao.listaTodos())\n            .catch(erro => {\n                console.log(erro);\n                throw new Error('Não foi possível obter as negociações')\n            });\n    }\n\n    apaga() {\n\n        return ConnectionFactoryService\n            .getConnection()\n            .then(connection => new NegociacaoDao(connection))\n            .then(dao => dao.apagaTodos())\n            .then(() => 'Negociações apagadas com sucesso'\n            )\n            .catch(erro => {\n                console.log(erro);\n                throw new Error('Não foi possível apagar as negociações');\n\n            });\n    }\n\n    importa(listaAtual) {\n\n        return this.obterNegociacoes()\n            .then(negociacoes => negociacoes.filter(negociacao =>\n                !listaAtual\n                    .some(negociacaoExistente => negociacao.isEquals(negociacaoExistente))\n            )).catch(erro => {\n                console.log(erro);\n                throw new Error('Não foi possível buscar negociações')\n            });\n\n    }\n}"]}